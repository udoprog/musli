header = [
    "The following are the results of preliminary benchmarking and should be",
    "taken with a big grain of ðŸ§‚.",
]

url = "https://udoprog.github.io/musli/benchmarks"
branch = "gh-pages"

# features expected to be common to all.
common = ["no-rt", "std", "alloc"]

[missing_features]
u64 = "Format is limited to the bounds of signed 64-bit integers."
"128" = "128-bit integers are not supported."
newtype = "Newtype variants are not supported."
empty = "Empty variants are not supported."
string-set = "String sets like `HashSet<String>` are not supported."
string-key = "Maps with strings as keys like `HashMap<String, T>` are not supported."
number-key = "Maps with numerical keys like `HashMap<u32, T>` are not supported."
tuple = "Tuples like `(u32, u32)` are not supported."
cstring = "`CString`'s are not supported."
usize = "`usize` types are not supported."
isize = "`isize` types are not supported."
set = "Sets like `HashSet<T>` are not supported."
map = "Maps like `MashMap<K, V>` are not supported."
nonunit-variant = "Only empty unit variants are supported."
char = "Character types like `char` are not supported."
binary-equality = "Values are not preserved exactly when serialized and deserialized. Such as floating point values, even when they are exact."

[[kinds]]
id = "dec"
description = "Decode a type."

[[kinds]]
id = "enc"
description = "Encode a type."

[[groups]]
id = "primitives"
description = "A small object containing one of each primitive type and a string and a byte array."

[[groups]]
id = "primpacked"
description = "Tried to achieve the same goal as `primitives`, but with a packed layout to support certain zerocopy libraries."

[[groups]]
id = "medium_enum"
description = "A moderately sized enum with every kind of supported variant."

[[groups]]
id = "large"
description = "A really big and complex struct."

[[groups]]
id = "allocated"
description = "A sparse struct which contains fairly plain allocated data like strings and vectors."

[[reports]]
id = "full"
title = "Full features"
link = "full-features"
description = [
    "These frameworks provide a fair comparison against MÃ¼sli on various areas since",
    "they support the same set of features in what types of data they can represent.",
]
features = [
    "musli-wire",
    "musli-descriptive",
    "musli-storage",
    "musli-value",
    "bincode",
    "rmp-serde",
    "postcard",
    "bitcode",
    "simdutf8",
]
expected = [
    "musli", "serde"
]

[[reports]]
id = "text"
title = "Text-based formats"
link = "text-based-formats"
description = [
    "These are text-based formats, which support the full feature set of this test suite.",
]
features = [
    "musli-json",
    "serde_json",
    "simdutf8",
]
expected = [
    "musli", "serde",
]

[[reports]]
id = "fewer"
title = "Fewer features"
link = "fewer-features"
description = [
    "This is a suite where support for 128-bit integers and maps are disabled.",
    "Usually because the underlying framework lacks support for them.",
]
features = [
    "musli-wire",
    "musli-descriptive",
    "musli-storage",
    "musli-value",
    "serde_cbor",
    # broken
    # "dlhn",
    "simdutf8",
]
expected = [
    "musli", "serde",
    "no-128", "no-map",
]

[[reports]]
id = "speedy"
title = "Features for speedy"
link = "speedy"
description = [
    "This is a suite for speedy, which doesn't support `isize`.",
]
features = [
    "musli-wire",
    "musli-descriptive",
    "musli-storage",
    "musli-value",
    "speedy",
]
expected = [
    "musli",
    "no-isize",
    "no-cstring",
]

[[reports]]
id = "zerocopy-rkyv"
title = "MÃ¼sli vs rkyv"
link = "mÃ¼sli-vs-rkyv"
description = [
    "Comparison between [`musli-zerocopy`] and [`rkyv`].",
    "",
    "Note that `musli-zerocopy` only supports the `primitives` benchmark.",
]
features = ["musli-zerocopy", "rkyv"]
expected = [
    "no-cstring", "no-map", "no-set", "no-tuple", "no-usize", "no-isize",
]
only = ["primitives", "primpacked"]

[[reports]]
id = "zerocopy-zerocopy"
link = "mÃ¼sli-vs-zerocopy"
description = [
    "Compares [`musli-zerocopy`] with [`zerocopy`].",
    "",
    "Note that `zerocopy` only supports packed primitives, so we're only comparing with that suite.",
]
title = "MÃ¼sli vs zerocopy"
features = ["musli-zerocopy", "zerocopy"]
expected = []
only = ["primpacked"]

[[reports]]
id = "bitcode-derive"
title = "Bitcode derive"
link = "bitcode-derive"
description = [
    "Uses a custom derive-based framework which does not support everything MÃ¼sli and serde does.",
]
features = [
    "musli-wire",
    "musli-descriptive",
    "musli-storage",
    "bitcode-derive",
]
expected = [
    "musli", "no-cstring",
]

[[reports]]
id = "bson"
title = "BSON"
link = "bson"
description = [
    "Specific comparison to BSON, because the format is limited in capabilities.",
]
features = [
    "musli-wire",
    "musli-descriptive",
    "musli-storage",
    "bson",
]
expected = [
    "musli", "serde", "no-128", "no-u64", "no-empty", "no-newtype", "no-number-key"
]

[[reports]]
id = "miniserde"
title = "Miniserde"
link = "miniserde"
description = [
    "An experimental framework which only supports JSON and a limited number of Rust types.",
]
features = [
    "musli-json",
    "serde_json",
    "miniserde",
]
expected = [
    "musli", "serde", "miniserde", "no-cstring", "no-btree", "no-map", "no-set", "no-nonunit-variant", "no-128", "no-char", "no-tuple", "no-binary-equality"
]

[footnotes]
incomplete = "These formats do not support a wide range of Rust types. Exact level of support varies. But from a size perspective it makes size comparisons either unfair or simply an esoteric exercise since they can (or cannot) make stricter assumptions as a result."
i128 = "Lacks 128-bit support."
bson = "BSON does not support serializing directly in-place [without patches](https://github.com/mongodb/bson-rust/pull/328). As a result it is expected to be much slower."
musli_value = "`musli-value` is a heap-allocated, in-memory format. Deserialization is expected to be as fast as a dynamic in-memory structure can be traversed, but serialization requires a lot of allocations. It is only included for reference."
miniserde = "`miniserde` only supports allocated serialization (to `String`), and only supported deserialization from `&str` which if treated as opaque data would need to be validated as UTF-8."

[crate_footnotes]
bson = ["bson"]
musli_value = ["musli_value"]

[size_footnotes]
musli_json = ["incomplete"]
rkyv = ["incomplete"]
serde_bitcode = []
serde_cbor = ["i128"]
serde_dlhn = ["i128"]
serde_json = ["incomplete"]
derive_bitcode = []

[[links]]
title = "`rkyv`"
href = "https://docs.rs/rkyv"

[[links]]
title = "`zerocopy`"
href = "https://docs.rs/zerocopy"

[[links]]
title = "`musli-zerocopy`"
href = "https://docs.rs/musli-zerocopy"
